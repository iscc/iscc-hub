openapi: 3.1.0
info:
  title: ISCC-HUB API
  description: Sign, timestamp, and discover content with ISCC-IDs
  version: 0.1.0
paths:
  /declare:
    post:
      summary: Declare an ISCC-CODE
      description: |
        Submit an IsccNote for declaration. The server validates the submission,
        sequences it in the declaration log, and returns an IsccReceipt as a verifiable credential.
      operationId: declare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsccNote'
            examples:
              full_example:
                summary: Complete IsccNote with all optional fields
                value:
                  iscc_code: "ISCC:KACT46A6S3L5XTH3O2UXRHPKZOTRV2QZ2UDAEVWVWOACDIKE4HHI7VA"
                  datahash: "1e208021a144e1ce8fd4ecb2c7660d712b0e6818926bf2e3bb4930d54b5b23ed304d"
                  metahash: "1e20a0e3c5b4f7d2c1a8e9f5b3d7e2a1c4f8b6d9e3a7c2f5d8b1e4a9c7f3b6d2e1"
                  nonce: "000faa3f18c7b9407a48536a9b00c4cb"
                  resolver: "https://example.com/metadata"
                  units:
                  - "ISCC:AADZH265WE3KJOSR5K67QJEF5JHLF2REJJYVI4ZYKJ727JU2ZX2AHNQ"
                  - "ISCC:EADUZ5XBKQCWGG4HYIKX7CNPQMFTPTWEUCQLXFJWC25TKM645KYUSNQ"
                  - "ISCC:GADZFVRM53JZBN7XOOT3Y6FL372G2GY6PEKRY43JIJ6KV4GH5P7NN4A"
                  signature:
                    version: "ISCC-SIG v1.0"
                    controller: "did:web:example.com"
                    keyid: "key-1"
                    pubkey: "z6MkhQLS6HMEd8Tc6sBtY1LFutKSt69K69g77asCKXAZsAT1"
                    proof: "zYsDddLFwrhcw8YfbmTQXCSiZYu5BEyCp1ULWERuvgVEVunoCiwxe5n8KF3QPA9s7W4z9eM8dUbtQML5y7mqjCDr"
              minimal_example:
                summary: Minimal IsccNote with only required fields
                value:
                  iscc_code: "ISCC:KACT46A6S3L5XTH3O2UXRHPKZOTRV2QZ2UDAEVWVWOACDIKE4HHI7VA"
                  datahash: "1e208021a144e1ce8fd4ecb2c7660d712b0e6818926bf2e3bb4930d54b5b23ed304d"
                  nonce: "0008cbf4aa191469590593ea715a0a4c"
                  signature:
                    version: "ISCC-SIG v1.0"
                    pubkey: "z6MknNWEmX1zYYZbCCjWGYja9gZA64AKrKNLtsdP2g5EkFrB"
                    proof: "z2dW4e3DVcqnweJWPvLZNyaYiYTZiaEYKHiy3PUpE6Poth2BUVzKA72Tqih6GHz9KoWvEQ2CqfXSgyjY17cR94nXu"
      responses:
        '201':
          description: Declaration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsccReceipt'
        '422':
          description: Validation error or request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      description: Error response for notary operations
      required:
      - error
      properties:
        error:
          type: string
          description: Human-readable error message
        detail:
          type: string
          description: Additional error details (optional)
        request_id:
          type: string
          format: uuid
          description: Unique request identifier for debugging

    IsccReceipt:
      type: object
      description: W3C Verifiable Credential for ISCC notarization
      required:
      - '@context'
      - type
      - issuer
      - credentialSubject
      - proof
      properties:
        '@context':
          type: array
          description: JSON-LD context for the Verifiable Credential
          items:
            type: string
          minItems: 1
          example: ["https://www.w3.org/ns/credentials/v2"]
        type:
          type: array
          description: Types of the credential
          items:
            type: string
          minItems: 2
          example: ["VerifiableCredential", "IsccReceipt"]
        issuer:
          type: string
          format: uri
          description: DID of the notary server issuing this credential
          example: "did:web:notary.example.com"
        credentialSubject:
          type: object
          description: Claims about the subject of the credential
          required:
          - id
          - notarization
          properties:
            id:
              type: string
              format: uri
              description: DID of the subject (signer of the IsccNote)
              example: "did:key:z6MkhaXgBZDvotDkL5257faiztiGiC2QtKLGpbnnEGta2doK"
            notarization:
              type: object
              description: Notarization details
              required:
              - seq
              - iscc_id
              - iscc_note
              properties:
                seq:
                  type: integer
                  description: Sequence number in the notary log (starting at 0)
                  minimum: 0
                iscc_id:
                  type: string
                  description: Unique ISCC-ID assigned by the notary
                  pattern: "^ISCC:[A-Z0-9]{10,}$"
                iscc_note:
                  $ref: '#/components/schemas/IsccNote'
        proof:
          type: object
          description: W3C Data Integrity proof created by notary server
          required:
          - type
          - cryptosuite
          - verificationMethod
          - proofPurpose
          - proofValue
          properties:
            type:
              type: string
              const: "DataIntegrityProof"
            cryptosuite:
              type: string
              const: "eddsa-jcs-2022"
            verificationMethod:
              type: string
              format: uri
              description: DID URL of the notary's signing key
            proofPurpose:
              type: string
              const: "assertionMethod"
            proofValue:
              type: string
              description: Multibase-encoded signature
              pattern: "^z[1-9A-HJ-NP-Za-km-z]+$"
    IsccSignature:
      type: object
      description: ISCC Signature object providing cryptographic integrity and optional identity attribution
      required:
      - version
      - proof
      - pubkey
      properties:
        version:
          type: string
          const: "ISCC-SIG v1.0"
          description: Version of the ISCC Signature format
        controller:
          type: string
          format: uri
          description: URI that identifies the key controller (e.g., DID or CID)
        keyid:
          type: string
          description: Specific key identifier within the controller document
        pubkey:
          type: string
          description: Ed25519 public key in multibase format (z-base58-btc with ED01 prefix)
          pattern: "^z[1-9A-HJ-NP-Za-km-z]+$"
        proof:
          type: string
          description: EdDSA signature in multibase format (z-base58-btc)
          pattern: "^z[1-9A-HJ-NP-Za-km-z]+$"
      example:
        version: "ISCC-SIG v1.0"
        controller: "did:web:example.com"
        keyid: "key-1"
        pubkey: "z6MkhQLS6HMEd8Tc6sBtY1LFutKSt69K69g77asCKXAZsAT1"
        proof: "zYsDddLFwrhcw8YfbmTQXCSiZYu5BEyCp1ULWERuvgVEVunoCiwxe5n8KF3QPA9s7W4z9eM8dUbtQML5y7mqjCDr"
    IsccNote:
      type: object
      description: ISCC notarization request object
      required:
      - iscc_code
      - datahash
      - nonce
      - signature
      properties:
        iscc_code:
          type: string
          description: The ISCC-CODE to be notarized
          pattern: "^ISCC:[A-Z0-9]{13,73}$"
          example: "ISCC:KACT46A6S3L5XTH3O2UXRHPKZOTRV2QZ2UDAEVWVWOACDIKE4HHI7VA"
        datahash:
          type: string
          description: Blake3 hash of the notarized asset (hex encoded 256 bit multihash with blake3 prefix)
          pattern: "^1e20[0-9a-fA-F]{64}$"
          example: "1e208021a144e1ce8fd4ecb2c7660d712b0e6818926bf2e3bb4930d54b5b23ed304d"
        metahash:
          type: string
          description: Blake3 hash of seed metadata (256-bit hex-encoded multihash with prefix `1e20`). When
            present, this creates a cryptographic commitment to the exact metadata state at notarization time,
            allowing external registries to store mutable or deletable metadata while maintaining temporal
            integrity.
          pattern: "^1e20[0-9a-fA-F]{64}$"
          example: "1e20a0e3c5b4f7d2c1a8e9f5b3d7e2a1c4f8b6d9e3a7c2f5d8b1e4a9c7f3b6d2e1"
        nonce:
          type: string
          description: Unique 128-bit hex-encoded random value (first 12-bits denote server_id for replay
            protection)
          pattern: "^[0-9a-fA-F]{32}$"
          example: "000faa3f18c7b9407a48536a9b00c4cb"
        resolver:
          type: string
          format: uri
          description: URL where metadata and services for the notarized asset can be discovered
          example: "https://example.com/metadata"
        units:
          type: array
          description: Array of decomposed ISCC-UNITs (excluding Instance-Code Unit). Only include UNITs with
            ISCC-BODYs larger than 64-bit for improved large-scale discovery and matching. The original
            ISCC-CODE can be reconstructed by converting the datahash to an Instance-Code UNIT, appending it to
            this array, and passing to iscc_core.gen_iscc_code.
          items:
            type: string
            pattern: "^ISCC:[A-Z0-9]{10,73}$"
          example: ["ISCC:AADZH265WE3KJOSR5K67QJEF5JHLF2REJJYVI4ZYKJ727JU2ZX2AHNQ", "ISCC:EADUZ5XBKQCWGG4HYIKX7CNPQMFTPTWEUCQLXFJWC25TKM645KYUSNQ",
            "ISCC:GADZFVRM53JZBN7XOOT3Y6FL372G2GY6PEKRY43JIJ6KV4GH5P7NN4A"]
        signature:
          $ref: '#/components/schemas/IsccSignature'
      example:
        iscc_code: "ISCC:KACT46A6S3L5XTH3O2UXRHPKZOTRV2QZ2UDAEVWVWOACDIKE4HHI7VA"
        datahash: "1e208021a144e1ce8fd4ecb2c7660d712b0e6818926bf2e3bb4930d54b5b23ed304d"
        metahash: "1e20a0e3c5b4f7d2c1a8e9f5b3d7e2a1c4f8b6d9e3a7c2f5d8b1e4a9c7f3b6d2e1"
        nonce: "000faa3f18c7b9407a48536a9b00c4cb"
        resolver: "https://example.com/metadata"
        units:
        - "ISCC:AADZH265WE3KJOSR5K67QJEF5JHLF2REJJYVI4ZYKJ727JU2ZX2AHNQ"
        - "ISCC:EADUZ5XBKQCWGG4HYIKX7CNPQMFTPTWEUCQLXFJWC25TKM645KYUSNQ"
        - "ISCC:GADZFVRM53JZBN7XOOT3Y6FL372G2GY6PEKRY43JIJ6KV4GH5P7NN4A"
        signature:
          version: "ISCC-SIG v1.0"
          controller: "did:web:example.com"
          keyid: "key-1"
          pubkey: "z6MkhQLS6HMEd8Tc6sBtY1LFutKSt69K69g77asCKXAZsAT1"
          proof: "zYsDddLFwrhcw8YfbmTQXCSiZYu5BEyCp1ULWERuvgVEVunoCiwxe5n8KF3QPA9s7W4z9eM8dUbtQML5y7mqjCDr"
