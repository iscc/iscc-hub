openapi: 3.1.0
info:
  title: ISCC-HUB API
  description: Sign, timestamp, and discover content with ISCC-IDs
  version: 0.1.0
paths:
  /declare:
    post:
      summary: Declare an ISCC-CODE
      description: |
        Submit an IsccNote for declaration. The server validates the submission,
        sequences it in the declaration log, and returns an IsccReceipt as a verifiable credential.
      operationId: declare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsccNote'
            examples:
              full_example:
                summary: Complete IsccNote with all optional fields
                value:
                  iscc_code: "ISCC:KACWN77F73NA44D6EUG3S3QNJIL2BPPQFMW6ZX6CZNOKPAK23S2IJ2I"
                  datahash: "1e205ca7815adcb484e9a136c11efe69c1d530176d549b5d18d038eb5280b4b3470c"
                  metahash: "1e202335f74fc18e2f4f99f0ea6291de5803e579a2219e1b4a18004fc9890b94e598"
                  nonce: "000faa3f18c7b9407a48536a9b00c4cb"
                  timestamp: "2025-01-15T12:00:00.000Z"
                  gateway: "https://example.com/iscc_id/{iscc_id}/metadata"
                  units:
                  - "ISCC:AADWN77F73NA44D6X3N4VEUAPOW5HJKGK5JKLNGLNFPOESXWYDVDVUQ"
                  - "ISCC:EADSKDNZNYGUUF5AMFEJLZ5P66CP5YKCOA3X7F36RWE4CIRCBTUWXYY"
                  - "ISCC:GAD334BLFXWN7QWLCSBGJMLRZW73FFNV7ORVUKN23UWPKGQCWTIHQKY"
                  signature:
                    version: "ISCC-SIG v1.0"
                    controller: "did:web:example.com"
                    pubkey: "z6MkmeDbeC5BecFmVnTHA5PWEBaVUrGLdB3weGE2KYnXfHso"
                    proof: "z5j9nrpPw3oYSAN4XbCvk2sUtkwrueTD6V2Y35gS1KFTode2ED2YQWokPmoXw6QBYtYEFxtAQfzBhdNyr8PMwP79G"
              minimal_example:
                summary: Minimal IsccNote with only required fields
                value:
                  iscc_code: "ISCC:KACWN77F73NA44D6EUG3S3QNJIL2BPPQFMW6ZX6CZNOKPAK23S2IJ2I"
                  datahash: "1e205ca7815adcb484e9a136c11efe69c1d530176d549b5d18d038eb5280b4b3470c"
                  nonce: "000faa3f18c7b9407a48536a9b00c4cb"
                  timestamp: "2025-01-15T12:00:00.000Z"
                  signature:
                    version: "ISCC-SIG v1.0"
                    controller: "did:web:example.com"
                    pubkey: "z6MkmeDbeC5BecFmVnTHA5PWEBaVUrGLdB3weGE2KYnXfHso"
                    proof: "znTcLukuu7CL8FpoaSxr6UWQpxCogZUCZ9iqx9dnP3inkzGszbUN79qrxWvpxEHnuNtLQ5Jd1rBukY7g1JSiYHVZ"
      responses:
        '201':
          description: Declaration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsccReceipt'
        '422':
          description: Validation error or request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      description: Error response for notary operations
      required:
      - error
      properties:
        error:
          type: string
          description: Human-readable error message
        detail:
          type: string
          description: Additional error details (optional)
        request_id:
          type: string
          format: uuid
          description: Unique request identifier for debugging

    IsccReceipt:
      type: object
      description: W3C Verifiable Credential for ISCC notarization
      required:
      - '@context'
      - type
      - issuer
      - credentialSubject
      - proof
      properties:
        '@context':
          type: array
          description: JSON-LD context for the Verifiable Credential
          items:
            type: string
          minItems: 1
          example: ["https://www.w3.org/ns/credentials/v2"]
        type:
          type: array
          description: Types of the credential
          items:
            type: string
          minItems: 2
          example: ["VerifiableCredential", "IsccReceipt"]
        issuer:
          type: string
          format: uri
          description: DID of the notary server issuing this credential
          example: "did:web:notary.example.com"
        credentialSubject:
          type: object
          description: Claims about the subject of the credential
          required:
          - id
          - notarization
          properties:
            id:
              type: string
              format: uri
              description: DID of the subject (signer of the IsccNote)
              example: "did:key:z6MkhaXgBZDvotDkL5257faiztiGiC2QtKLGpbnnEGta2doK"
            notarization:
              type: object
              description: Notarization details
              required:
              - seq
              - iscc_id
              - iscc_note
              properties:
                seq:
                  type: integer
                  description: Sequence number in the notary log (starting at 0)
                  minimum: 0
                iscc_id:
                  type: string
                  description: Unique ISCC-ID assigned by the notary
                  pattern: "^ISCC:[A-Z0-9]{10,}$"
                iscc_note:
                  $ref: '#/components/schemas/IsccNote'
        proof:
          type: object
          description: W3C Data Integrity proof created by notary server
          required:
          - type
          - cryptosuite
          - verificationMethod
          - proofPurpose
          - proofValue
          properties:
            type:
              type: string
              const: "DataIntegrityProof"
            cryptosuite:
              type: string
              const: "eddsa-jcs-2022"
            verificationMethod:
              type: string
              format: uri
              description: DID URL of the notary's signing key
            proofPurpose:
              type: string
              const: "assertionMethod"
            proofValue:
              type: string
              description: Multibase-encoded signature
              pattern: "^z[1-9A-HJ-NP-Za-km-z]+$"
    IsccSignature:
      type: object
      description: ISCC Signature object providing cryptographic integrity and optional identity attribution
      required:
      - version
      - proof
      - pubkey
      properties:
        version:
          type: string
          const: "ISCC-SIG v1.0"
          description: Version of the ISCC Signature format (must be exactly "ISCC-SIG v1.0")
        controller:
          type: string
          format: uri
          description: URI that identifies the key controller (e.g., DID or CID)
        keyid:
          type: string
          description: Specific key identifier within the controller document
        pubkey:
          type: string
          description: Ed25519 public key in multibase format (z-base58-btc with ED01 prefix)
          pattern: "^z[1-9A-HJ-NP-Za-km-z]+$"
        proof:
          type: string
          description: EdDSA signature in multibase format (z-base58-btc)
          pattern: "^z[1-9A-HJ-NP-Za-km-z]+$"
      example:
        version: "ISCC-SIG v1.0"
        controller: "did:web:example.com"
        pubkey: "z6MkmeDbeC5BecFmVnTHA5PWEBaVUrGLdB3weGE2KYnXfHso"
        proof: "z5j9nrpPw3oYSAN4XbCvk2sUtkwrueTD6V2Y35gS1KFTode2ED2YQWokPmoXw6QBYtYEFxtAQfzBhdNyr8PMwP79G"
    IsccNote:
      type: object
      description: ISCC notarization request object
      required:
      - iscc_code
      - datahash
      - nonce
      - timestamp
      - signature
      properties:
        iscc_code:
          type: string
          description: The ISCC-CODE to be notarized
          pattern: "^ISCC:[A-Z0-9]{13,73}$"
          example: "ISCC:KACWN77F73NA44D6EUG3S3QNJIL2BPPQFMW6ZX6CZNOKPAK23S2IJ2I"
        datahash:
          type: string
          description: Blake3 hash of the notarized asset (lowercase hex encoded 256 bit multihash with blake3 prefix)
          pattern: "^1e20[0-9a-f]{64}$"
          example: "1e205ca7815adcb484e9a136c11efe69c1d530176d549b5d18d038eb5280b4b3470c"
        metahash:
          type: string
          description: Blake3 hash of seed metadata (256-bit lowercase hex-encoded multihash with prefix `1e20`). When
            present, this creates a cryptographic commitment to the exact metadata state at notarization time,
            allowing external registries to store mutable or deletable metadata while maintaining temporal
            integrity.
          pattern: "^1e20[0-9a-f]{64}$"
          example: "1e202335f74fc18e2f4f99f0ea6291de5803e579a2219e1b4a18004fc9890b94e598"
        nonce:
          type: string
          description: Unique 128-bit lowercase hex-encoded random value (first 12-bits denote hub_id 0-4095
            for replay protection)
          pattern: "^[0-9a-f]{32}$"
          example: "000faa3f18c7b9407a48536a9b00c4cb"
        timestamp:
          type: string
          format: date-time
          description: RFC 3339 formatted timestamp in UTC with millisecond precision (e.g., "2025-08-04T12:34:56.789Z").
            The 'Z' suffix MUST be used to indicate UTC. This timestamp indicates when the IsccNote was created
            and signed by the declaring party. HUBs MUST reject IsccNotes with timestamps outside of Â±10 minutes
            from the HUB's current time.
          example: "2025-01-15T12:00:00.000Z"
        gateway:
          type: string
          description: URL or URI Template (RFC 6570) pointing to a GATEWAY for metadata and service discovery.
            Supported template variables are {iscc_id}, {iscc_code}, {pubkey}, {datahash}, {controller}.
            Must use HTTP or HTTPS scheme.
          example: "https://example.com/metadata"
        units:
          type: array
          description: Array of decomposed ISCC-UNITs (excluding Instance-Code Unit). Only include UNITs with
            ISCC-BODYs larger than 64-bit for improved large-scale discovery and matching. The original
            ISCC-CODE can be reconstructed by converting the datahash to an Instance-Code UNIT, appending it to
            this array, and passing to iscc_core.gen_iscc_code. Maximum array size is 100 items.
          items:
            type: string
            pattern: "^ISCC:[A-Z0-9]{10,73}$"
          maxItems: 4
          example: ["ISCC:AADWN77F73NA44D6X3N4VEUAPOW5HJKGK5JKLNGLNFPOESXWYDVDVUQ", "ISCC:EADSKDNZNYGUUF5AMFEJLZ5P66CP5YKCOA3X7F36RWE4CIRCBTUWXYY",
            "ISCC:GAD334BLFXWN7QWLCSBGJMLRZW73FFNV7ORVUKN23UWPKGQCWTIHQKY"]
        signature:
          $ref: '#/components/schemas/IsccSignature'
      example:
        iscc_code: "ISCC:KACWN77F73NA44D6EUG3S3QNJIL2BPPQFMW6ZX6CZNOKPAK23S2IJ2I"
        datahash: "1e205ca7815adcb484e9a136c11efe69c1d530176d549b5d18d038eb5280b4b3470c"
        metahash: "1e202335f74fc18e2f4f99f0ea6291de5803e579a2219e1b4a18004fc9890b94e598"
        nonce: "000faa3f18c7b9407a48536a9b00c4cb"
        timestamp: "2025-01-15T12:00:00.000Z"
        gateway: "https://example.com/iscc_id/{iscc_id}/metadata"
        units:
        - "ISCC:AADWN77F73NA44D6X3N4VEUAPOW5HJKGK5JKLNGLNFPOESXWYDVDVUQ"
        - "ISCC:EADSKDNZNYGUUF5AMFEJLZ5P66CP5YKCOA3X7F36RWE4CIRCBTUWXYY"
        - "ISCC:GAD334BLFXWN7QWLCSBGJMLRZW73FFNV7ORVUKN23UWPKGQCWTIHQKY"
        signature:
          version: "ISCC-SIG v1.0"
          controller: "did:web:example.com"
          pubkey: "z6MkmeDbeC5BecFmVnTHA5PWEBaVUrGLdB3weGE2KYnXfHso"
          proof: "z5j9nrpPw3oYSAN4XbCvk2sUtkwrueTD6V2Y35gS1KFTode2ED2YQWokPmoXw6QBYtYEFxtAQfzBhdNyr8PMwP79G"
